---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION, GITHUB_BRAND_COLOR } from '../consts';
import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

// Get episodes sorted by publication date (newest first)
const episodes = (await getCollection('episodes')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			.hero {
				padding: 4rem 1rem;
				display: flex;
				flex-direction: column;
				align-items: center;
				text-align: center;
				background-color: rgb(var(--gray-light));
				margin-bottom: 2rem;
			}
			.hero h1 {
				font-size: 3rem;
				font-weight: 700;
				margin-bottom: 1rem;
				color: rgb(var(--black));
			}
			.hero-description {
				max-width: 600px;
				margin: 0 auto 2rem;
				color: rgb(var(--gray-dark));
				font-size: 1.2rem;
				line-height: 1.6;
			}
			.cta-button {
				background-color: var(--github-blue);
				color: white;
				padding: 0.8rem 1.5rem;
				border-radius: 6px;
				text-decoration: none;
				font-weight: bold;
				transition: background-color 0.2s ease;
			}
			.cta-button:hover {
				background-color: var(--accent-dark);
			}
			.episodes-section {
				max-width: 100%;
				margin: 0 auto;
				padding: 0 0 4rem;
			}
			.episodes-grid {
				display: grid;
				grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
				gap: 1.5rem;
				margin-top: 2rem;
			}
			@media (min-width: 640px) {
				.episodes-grid {
					grid-template-columns: repeat(2, minmax(300px, 1fr));
					gap: 1.75rem;
				}
			}
			@media (min-width: 900px) {
				.episodes-grid {
					grid-template-columns: repeat(3, minmax(300px, 1fr));
					gap: 2rem;
				}
			}
			@media (min-width: 1200px) {
				.episodes-grid {
					grid-template-columns: repeat(4, minmax(300px, 1fr));
				}
				.episodes-section {
					max-width: 1400px;
					padding: 0 2.5rem 4rem;
				}
			}
			@media (min-width: 1600px) {
				.episodes-grid {
					grid-template-columns: repeat(5, minmax(300px, 1fr));
				}
			}
			.section-title {
				font-size: 2rem;
				margin-bottom: 2rem;
				text-align: center;
				color: rgb(var(--black));
			}
			.episode-card {
				position: relative;
				display: flex;
				flex-direction: column;
				border-radius: 8px;
				overflow: hidden;
				box-shadow: var(--box-shadow);
				transition: transform 0.2s ease-in-out;
				background-color: white;
			}
			.episode-card:hover {
				transform: translateY(-5px);
			}
			.thumbnail-container {
				position: relative;
				width: 100%;
				padding-top: 56.25%; /* 16:9 aspect ratio */
				overflow: hidden;
			}
			.thumbnail {
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				object-fit: cover;
			}
			.play-icon {
				position: absolute;
				top: 50%;
				left: 50%;
				transform: translate(-50%, -50%);
				color: white;
				background-color: rgba(0, 0, 0, 0.6);
				border-radius: 50%;
				width: 60px;
				height: 60px;
				display: flex;
				align-items: center;
				justify-content: center;
				font-size: 2rem;
				opacity: 0.8;
				transition: background-color 0.2s ease, opacity 0.2s ease;
			}
			.episode-card:hover .play-icon {
				background-color: var(--github-red);
				opacity: 1;
			}
			.episode-content {
				padding: 1.5rem;
				flex-grow: 1;
				display: flex;
				flex-direction: column;
			}
			.title {
				margin: 0;
				font-size: 1.25rem;
				font-weight: 600;
				color: rgb(var(--black));
				line-height: 1.3;
				margin-bottom: 0.5rem;
			}
			.date {
				margin: 0;
				color: rgb(var(--gray));
				font-size: 0.9rem;
				margin-bottom: 0.75rem;
			}
			.description {
				margin: 0;
				color: rgb(var(--gray-dark));
				font-size: 0.95rem;
				line-height: 1.4;
				display: -webkit-box;
				-webkit-line-clamp: 3;
				-webkit-box-orient: vertical;
				overflow: hidden;
			}
			.featured-episode {
				display: grid;
				grid-template-columns: 1fr 1fr;
				gap: 3rem;
				align-items: center;
				margin-bottom: 4rem;
				padding: 0 1rem;
			}
			.featured-content h2 {
				font-size: 2rem;
				margin-bottom: 1rem;
				color: var(--github-blue);
			}
			.see-all-link {
				display: block;
				text-align: center;
				margin-top: 3rem;
				color: var(--github-blue);
				text-decoration: none;
				font-weight: bold;
			}
			.see-all-link:hover {
				text-decoration: underline;
			}
			@media (max-width: 768px) {
				.featured-episode {
					grid-template-columns: 1fr;
				}
				.hero h1 {
					font-size: 2.5rem;
				}
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			{episodes.length > 0 && (
				<div class="featured-episode">
					<div class="featured-content">
						<h2>Latest Episode</h2>
						<h3 class="title">{episodes[0].data.title}</h3>
						<p class="date"><FormattedDate date={episodes[0].data.pubDate} /></p>
						<p class="description">{episodes[0].data.description}</p>
						<p></p>
						<a href={`./episodes/${episodes[0].data.slug}/`} class="cta-button" style="margin-top: 10rem;">Watch Now</a>
					</div>
					<a href={`./episodes/${episodes[0].data.slug}/`} class="episode-card">
						<div class="thumbnail-container">
							<img class="thumbnail" src={episodes[0].data.thumbnailUrl} alt={episodes[0].data.title} />
							<div class="play-icon">▶</div>
						</div>
					</a>
				</div>
			)}

			<section class="episodes-section">
				<h2 class="section-title">Recent Episodes</h2>
				
				<div class="episodes-grid">
					{episodes.slice(1, 9).map((episode) => (
						<a href={`./episodes/${episode.data.slug}/`} class="episode-card">
							<div class="thumbnail-container">
								<img class="thumbnail" src={episode.data.thumbnailUrl} alt={episode.data.title} />
								<div class="play-icon">▶</div>
							</div>
							<div class="episode-content">
								<h3 class="title">{episode.data.title}</h3>
								<p class="date"><FormattedDate date={episode.data.pubDate} /></p>
								<p class="description">{episode.data.description}</p>
							</div>
						</a>
					))}
				</div>
				
				<a href="./episodes" class="see-all-link">See all episodes →</a>
			</section>
		</main>
		<Footer />
	</body>
</html>
